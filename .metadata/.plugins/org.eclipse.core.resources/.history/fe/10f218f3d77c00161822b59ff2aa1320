package com.controller;

import java.beans.PropertyEditor;
import java.io.IOException;
import java.io.Writer;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;

import javax.annotation.Resource;

import org.apache.log4j.Logger;
import org.springframework.beans.propertyeditors.CustomDateEditor;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.WebDataBinder;
import org.springframework.web.bind.annotation.InitBinder;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.servlet.ModelAndView;

import com.google.gson.Gson;
import com.model.Product;
import com.model.ProductStatus;
import com.service.ProductService;

@Controller
public class ProductController {
	@Resource
	private ProductService productService;
	
	private Logger logger = Logger.getLogger(ProductController.class);
	
	@RequestMapping("addProduct")  
	public ModelAndView addProduct(Product product) {
		
		ModelAndView modelAndView = new ModelAndView(); 
		
		logger.info(product);
		String prodNo = product.getProdNo();
		
		if(productService.ifProdNoExist(prodNo)) {
			modelAndView.setViewName("addProduct");
			modelAndView.addObject("msg", "商品编号已存在");
		} else {
			int res = productService.addProduct(product);
			
			if(res > 0) {
				modelAndView.setViewName("addProductImage");
				modelAndView.addObject("prodNo", prodNo);
			} else {
				modelAndView.setViewName("addProduct");
				modelAndView.addObject("msg", "添加商品失败");
			}
		}
		return modelAndView;
	}
	
	@RequestMapping("getProductStatus")  
	public void getProductStatus(Writer writer) throws IOException {
		
		ModelAndView modelAndView = new ModelAndView(); 
		
		logger.info("getProductStatus");
		
		List<ProductStatus> list = productService.getProductStatus();
		
		Gson gson = new Gson();
		String result = gson.toJson(list);
		
		writer.write(result);
		
	}
	
	@InitBinder  
    public void dataBinder(WebDataBinder binder) {  
       DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");  
       PropertyEditor propertyEditor = new CustomDateEditor(dateFormat, true); // 第二个参数表示是否允许为空  
       binder.registerCustomEditor(Date.class, propertyEditor);  
	}
}
